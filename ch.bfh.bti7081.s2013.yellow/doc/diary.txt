============================================
===                                      ===
=== DIARY OF ch.bfh.bti7081.s2013.yellow ===
===                                      ===
============================================

== Diary ==

20130531
--------
  - Anwesend: polla2, hutzf1, bronc1, rohdj
  - Abwesend: glisb1 (Grund: Arbeit )
  - Sprint 2 abgeschlossen
  - Sprint 3 definiert -> siehe scrum-backlog
    - JUnit-Testing hinzugef¸gt

20130529
--------
  - Anwesend: polla2, hutzf1, bronc1, rohdj
  - Abwesend: glisb1 (Grund: Arbeit )
  - Sprint 2:
    Arbeiten an den Tasks im Backlog.
  - Installation manual erstellt, abgelegt in doc/cs1_task10/installation_manual.txt

20130524
--------
  - Anwesend: polla2, glisb1, bronc1, rohdj1
  - Abwesend: hutzf1 (Grund: Weiterbildung gesch√§ftlich)
  - Sprint 2
    - Daily
    - Entscheide:
        - Applikation auf Jetty laufen lassen
          Dass die Applikation auf dem Tomcat l√§uft, ist nicht mehr priorit√§r.
          JMX wird auch von Jetty unterst√ºtzt.
        - State Pattern umbauen
          Die momentane Implementierung des State Patterns ist nicht ideal bei Verwendung mit Hibernate.
          Der L√∂sungsansatz mit Hibernate (mit Hibernate UserType etc.) scheint uns etwas zu aufw√§ndig und kompliziert.

20130522
--------
  - Anwesend: alle
  - Definition Sprint 2
    - offene Tasks:
      - Umstieg von Jetty auf Tomcat -> Task 3.15
      - Task 3.9 offen
      - Rest in Scrum-Backlog
      - Javadoc nachtr√§glich f√ºhren
    - Arbeit an Tasks -> siehe Scrum-Backlog

20130517
--------
  - Anwesend: polla2, glisb1, bronc1, hutzf1
  - Abwesend: rohdj1 (Grund: Krankheit)
  - CS1 Task 12
    - Diskussion zur Art des Implementation des State Patterns in unseren Use Case
    - Definition der Zust√§nde
    - Implementation (polla2) -> Task 3.4
    - Zusammenfassender Bericht (hutzf1)
  - CS1 Task 13
    - Pr√§sentation erstellt (polla2)
    - Implementation (polla2)
  - Task 3.10 (glisb1)
    - Entscheid: Externe Steuerung via JMX/MBean
  - Sprint 1 - Abschluss
    - Task 3.9 in Sprint 2 verschoben


20130515
--------
  - CS1 task 10 - Sprint 1 (rohdj1) Task 3.7 done
    - Integration von Spring in Vaadin
        Vaadin hat (noch?) nicht vollen Spring Support, deswegen funktioniert in Vaadin-Beans @Autowired nicht
        Daf√ºr kann man das Bean wie folgt injecten (Bsp. PatientService):
          patientService = (PatientService)springHelper.getBean("patientService");

        Habe mit div. Integrationsaddons und sonstigen Sachen herumprobiert,
        kam aber nicht auf ein befriedigerendes Ergebnis als mit dem SpringHelper Util

    - VOs, DAOs, Services f√ºr Medicament, Prescription und Patient gemacht

    - Dummy-Daten f√ºr Medikamente und Patienten unter src/main/resources/init.sql
        Das Script muss auf der lokalen DB ausgef√ºhrt werden, bevor mit Patienten/Medikamenten gearbeitet werden kann

    - Integration von hibernate validator (@Min, @Max, @Regexp, @NotNull,...)
        F√ºr jedes UI Feld, das via Bean validation (JSR 303/hibernate validator) muss folgendes gemacht werden (Bsp. validUntil):
          validUntil.addValidator(new BeanValidator(Prescription.class, "validUntil"));

    - Erstellung des PrescriptionUI
        Neue Prescriptions k√∂nnen erfasst werden
        Prescriptions k√∂nnen mit dem GET Parameter "prescId" bearbeitet werden
        Und mit delete wird deren Status aus deactived gesetzt



20130510
--------
  - CS1 task 10 - Sprint 1 (polla2) done
    - Setup von Spring inkl. Hibernate
    - Datenbankanbindung
        DB-Konfigurationsfile: persistence.xml
        Wie am Mittwoch Abend gemeinsam besprochen, nutzen wir MySQL.
        Entsprechend habe ich Hibernate konfiguriert.
        Standardwerte in der Konfig:
            username:   root
            password:
            DB-Name:    db_yellow_dev
        Die Werte k√∂nnen f√ºr die lokale Entwicklungsumgebung ge√§ndert werden.
        Die √É‚Äûnderungen jedoch bitte nicht committen.
    - jetty
        Die Testapplikation mit dem Adressbuch l√§uft.
        Um die Applikation zu starten mit maven im root des Projektes jetty:run ausf√ºhren
            Befehl: mvn jetty:run
        Konfigurierter Port f√ºr unsere Webapp: 8080
        Die Applikation ist also erreichbar unter http://localhost:8080.
        Der Port kann bei Bedarf im pom.xml unter dem Jetty Plugin ge√§ndert werden.
    - generische Klassen f√ºr CRUD erstellt (DAO Layer, Service Layer)




20130508
--------
- Anwesend: alle
  Abwesend: -

  - Erstellen der Sprint-Backlogs, Priorisierung und Zuteilung
    -> State & Strategy Pattern sind eingeplant, m√ºssen aber noch
       genau angeschaut werden!
  
  TODOs Sprint1: 
    Task: 3.4	hutzf1
    Task: 3.7	rohdj1
    Task: 3.9	bronc1
    Task: 3.10	glisb1
    Task: 3.13	polla2
    Task: 3.14	polla2
    

20130503
--------
- Anwesend: glisb1, hutzf1, polla2, bronc1, rohdj1
  Abwesend: -

  - CS1 task 9
    - Systemarchtektur wurde in Hinblick auf Vaadin, persistenter Datenspeicher und Design Patterns hin angeschaut und f√ºr noch immer g√ºltig befunden.
  - CS1 task 10
    - Die Rollenverteilung innerhalb von Scrum wurde festgelegt. Siehe Datei scrumSetup.txt
	- Product Backlog erstellt mit Priorit√§ten
	- Mit Product Owner definiert, welche Story als erstes umgesetzt werden muss: Notification
	- Aufteilung wer welche Stories definiert, damit wir diese am Montag besprechen k√∂nnen:
		- Prescription Bereich:     Andy
		- System Trigger:           Boban
		- Notification Handling:    Fabian
		- Kommunikation zum Server: Christoph
		- Kommunikation zum Client: Janosch



20130426
--------
- Anwesend: glisb1, hutzf1, polla2, bronc1, rohdj1
  Abwesend: -

- Exercise 7 (alle)
    - Layer Architectural Pattern -> √É≈ìberlegungen zu Fluginfos
- CS1 Task08 (alle, wo keine andere Angabe)
    - Verbesserungen an Package Diagram
    - Diskussionen √ºber "Genauigkeit" -> Klassen in Package-Diagram? -> Nein!
    - Umsetzen in Visio (bronc1)
    - Pr√§sentation der Ergebnisse inkl. 2x Bluescreen ~.~ (polla2, rohdj1)

20130424
--------
- Anwesend: glisb1, hutzf1, polla2, bronc1, rohdj1
  Abwesend: -

- CS1 Task08
    - √É≈ìberlegungen zu Package-Diagram
    - Aufzeichnen zu Use-Case Analysis an Wandtafel


20130419
--------
- Anwesend: glisb1, hutzf1, polla2, bronc1, rohdj1
  Abwesend: -

- Exercise 6 (alle gemeinsam)
    - Aufgabe 1: Objektdiagramm
    - Aufgabe 2: Klassendiagramm
- CS1 Task07
    - Vervollst√§ndigung Domainmodel (rohdj1)
    - Vervollst√§ndigung Klassendiagramm (rohdj1, polla2)
    - Vervollst√§ndigung Sequenzdiagramm (hutzf1, glisb1)
    - Pr√§sentation erstellen, zusammenf√ºhren aller Tastk Elemente Inhalte (bronc1)
    - Konsistenz √ºber Sequenzdiagramm, Klassendiagramm, CRC Cards (polla2, bronc1)
    - Pr√§sentation halten (glisb1, polla2, bronc1)


20130417
--------
- Anwesend: glisb1, hutzf1, polla2, bronc1
  Abwesend: rohdj1 (Grund: gesch√§ftlich)

- CS1 Task07
    - √É≈ìberlegungen zu Domain Model (alle)
    - Erstellen der CRC-Cards (bronc1, polla2)
    - Beginn mit Sequence Diagram (glisb1, hutzf1)
    --> TODO: Domain Model gem√§ss CRC-Cards und Seq. Diagram fertigstellen, Pr√§sentation vorbereiten


20130412
--------
- Anwesend: glisb1, rohdj1, hutzf1
  Abwesend (Grund: Jugend + Sport): polla2, bronc1

- Exercises 5 √¢‚Ç¨‚Äú Sequence Diagram
- CS1 Task07
    - Erstellen UML Domain Model
    - √É≈ìberlegeungn f√ºr UML Sequence Diagram
    - Weitere T√§tigkeiten am 20130415 > Aufteilen und Besprechen der Arbeiten


20130410
--------
- Anwesend: glisb1, rohdj1, hutzf1
  Abwesend (Grund: Jugend + Sport): polla2, bronc1

- Exercises 4 √¢‚Ç¨‚Äú Class Diagram, Object Diagram

20130405
--------
- Anwesend: glisb1, bronc1, rohdj1, polla2, hutzf1
  Abwesend: -

- Alle gemeinsam:
    - CS1 Task06 erledigt
        - Aktivit√§tsdiagramm (cs1_task06_activity_model.pdf)
        - Kontextdiagramm (cs1_task06_context.pdf)
    - Exercises 3 √¢‚Ç¨‚Äú UML State Diagram (uml_stateDiagram.pdf)


20130403
--------
- Anwesend: glisb1, bronc1, rohdj1, polla2, hutzf1
  Abwesend: -

- CS1 Task05 erledigt:
    - Alle gemeinsam:
      Wir haben das Requirements Dokument der Gruppe black gereviewed.
      Das Dokument gefiel uns sehr gut.
      Die Kritik-Punkte haben wir im Dokument Requirements_CheckingGroupBlack.docs festgehalten.
    - glisb1, bronc1:
      Pr√§sentation des Reviews
- polla2: Habe gemerkt, dass das im Journal Eintrag vom 22.03.2013 erw√§hnte Dokument CS1T4_UserSystemRequirements_V01.00.pdf
  nicht gepushed wurde, da es nicht automatisch dem Source Control von git hinzugef√ºgt wurde und ich es nicht merkte.
  -> das pdf nachtr√§glich als CS1T4_UserSystemRequirements.pdf hinzugef√ºgt und nun in der Version 1.3,
     wobei es sich inhaltlich nicht von der Version 1.0 unterscheidet.

20130322
--------
- Anwesend: glisb1, bronc1, rohdj1, polla2
  Abwesend: -

- Alle gemeinsam:
    - einzelne Teile in ein Dokument zusammengef√ºgt: CS1T4_UserSystemRequirements.docx
    - Zusammenstellung der verschiedenen Teile in ein Dokument
    - Besprechung mit Herrn K√ºnzel bez√ºglich Use Case-Diagramm -> Anschliessend Neugestaltung (rohdj1)
    - Besprechung fehlender Teile, Erg√§nzungen
    - Feedback zu Design-Thinking-Process erhalten
- Pr√§sentation zu Task04 gehalten (glisb1, bronc1, polla2)
- Journal aktualisiert, erg√§nzt nach Feedback (polla2)
- Dokument Version V01.00 freigegeben: CS1T4_UserSystemRequirements_V01.00.pdf (polla2)

20130321
--------
- Erstellung Dokument Benutzer- Systemanforderung, erfassen Kapitel Einleitung (hutzf1)
- Erstellung use cases (rohdj1)
- Entwurf des Datenmodells (polla2)
- Entwurf der Systemarchitektur (polla2)
- Systemanforderungen (glisb1)

20130320
--------
- Anwesend:  bronc1, rohdj1, polla2
- Erstellung&Pr√§sentation der Design-Thinking Pr√§sentation
- Review des Task 4 von CS1
- Aufteilen der verschiedenen Themen zur Bearbeitung bis Freitag (bronc1)
    -> hutzf1: Preface, Introduction
    -> rohdj1: User Requirements
    -> polla2: System Architecture, System Models, System Evolution
    -> bronc1: Testing
    -> glisb1: System Requirements

20130319
--------
- √É≈ìbertragen der Storyboards von Fotos auf Mobile screens
- Erstellung des Storyboards f√ºr Patienteninteraktion

20130318
--------
- work on CS1 Task3 - Design Thinking
       Validate
           Validated prototype with staff in Zieglerspital
           discussed next step based on Zieglerspital feedback
           -> Probleme in der Usability. Sieht zu fest aus wie eine Desktop Anwendung.

           R√ºcksprache mit UPD
           Wir schlugen vor, dass auch Patienten Medikamente in ihrer Apotheke holen k√∂nnten.
           Sie fanden die Idee gut, aber nur f√ºr die nicht station√§ren Patienten.
           Die station√§ren Patienten bek√§men ohnehin ihre Medikamente nur vom Pflegepersonal oder vom Arzt und werden streng √ºberwacht.
           Es k√∂nnte also m√∂glich sein, dass Patienten (nur nicht station√§re) ihre Medikamente in der internen Apotheke ihre Medikamente holen.
           Dies gilt auch f√ºr Rezeptpflichtige Medikamente. Das Rezept, das ihnen vom der Psychiatrie ausgestellt wird, ist dann aber aus
           √É≈ìberwachungsgr√ºnden nur in den internen Apotheken g√ºltig.
           -> Die Anforderung, dass die Patienten die Medikamente selbst holen k√∂nnen, erfordert Anpassungen in der Applikation
       Alle Design Thinking Prozess Schritte bis und mit Prototyp nochmals durchgelaufen und aktualisiert.


20130317
--------
- √É≈ìbertragen der Prototypen von Fotos auf Mobile screens
- Erstellung der Prototypen f√ºr Patienteninteraktion

20130315
--------
- work on CS1 Task3 - Design Thinking
       Interview with Spitalzentrum Biel, Zieglerspital Bern
       Synthesis
       Design
       Prototype

20130314
--------
- work on CS1 Task3 - Design Thinking
       Researches
       Interview with UPD, Inselspital Bern

20130313
--------
- work on CS1 Task3 - Design Thinking
-- 1 - Scoping
-- 2 - Began with researches, noted unclear questions so we can ask them in the interview.

20130308
--------
- work on CS2 Task2
-- created use case diagram
-- made 2 detailed use case scenarios: Blutzuckergehalt messen, Blutzuckergehaltmessung auswerten

20130306
--------
- work on CS2 Task1
-- Discussion about Requirements

20130301
--------
- work on CS1 Task2
-- Pro/Con List of different SE Processes
-- Decicion of SE Process for the CS Project, based on first_analysis
-- Design SE-Process Model
-- => results: SE_Process.txt & XXX:TODO

20130227
--------
- work on CS1 Task1
-- Discussion about first analysis, target users, key features & critical success factors
-- Draw of high-level architecture
-- => results: firstAnalysis.txt & highlevel_architecture.jpg

20130222
--------
- build group
- create project on github
- install software development environment

